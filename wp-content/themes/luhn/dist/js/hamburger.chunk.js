(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["hamburger"],{

/***/ "../src/js/hamburger/colordrip.js":
/*!****************************************!*\
  !*** ../src/js/hamburger/colordrip.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _easings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./easings */ \"../src/js/hamburger/easings.js\");\n\r\n\r\nclass ShapeOverlays {\r\n\tconstructor() {\r\n\t\tthis.init();\r\n\t\tthis.path = this.elm[0].querySelectorAll('path');\r\n\t\tthis.numPoints = 10;\r\n\t\tthis.duration = 900;\r\n\t\tthis.delayPointsArray = [];\r\n\t\tthis.delayPointsMax = 300;\r\n\t\tthis.delayPerPath = 250;\r\n\t\tthis.timeStart = Date.now();\r\n\t\tthis.isOpened = false;\r\n\t\tthis.isAnimating = false;\r\n\t}\r\n\tinit() {\r\n\t\tconst elmHamburger = document.querySelector('.hamburger');\r\n\t\tconst body = document.querySelector('body');\r\n\t\tconst gNavItems = document.querySelectorAll('.global-menu__item');\r\n\t\tconst elmOverlay = document.querySelector('.shape-overlays');\r\n\t\tconst main = document.querySelector('main');\r\n\t\tconst elements = [elmOverlay, main];\r\n\t\tthis.elm = elements;\r\n\r\n\t\telmHamburger.addEventListener('click', () => {\r\n\t\t\tif (this.isAnimating) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.toggle();\r\n\t\t\tif (this.isOpened === true) {\r\n\t\t\t\telmHamburger.classList.add('is-opened-navi');\r\n\t\t\t\tthis.disableScrolling();\r\n\r\n\t\t\t\telmHamburger.setAttribute('aria-label', 'Back to the page');\r\n\t\t\t\telmHamburger.setAttribute('title', 'Close');\r\n\t\t\t\tfor (var i = 0; i < gNavItems.length; i++) {\r\n\t\t\t\t\tgNavItems[i].classList.add('is-opened');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\telmHamburger.classList.remove('is-opened-navi');\r\n\t\t\t\tthis.enableScrolling();\r\n\t\t\t\telmHamburger.setAttribute('aria-label', 'Open the hamburger menu');\r\n\t\t\t\telmHamburger.setAttribute('title', 'menu');\r\n\t\t\t\tfor (var i = 0; i < gNavItems.length; i++) {\r\n\t\t\t\t\tgNavItems[i].classList.remove('is-opened');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\ttoggle() {\r\n\t\tthis.isAnimating = true;\r\n\t\tfor (var i = 0; i < this.numPoints; i++) {\r\n\t\t\tthis.delayPointsArray[i] = Math.random() * this.delayPointsMax;\r\n\t\t}\r\n\t\tif (this.isOpened === false) {\r\n\t\t\tthis.open();\r\n\t\t} else {\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t}\r\n\topen() {\r\n\t\tthis.isOpened = true;\r\n\t\tthis.elm[0].classList.add('is-opened');\r\n\t\t// this.elm[1].classList.add('hide-behind-menu');\r\n\t\tthis.timeStart = Date.now();\r\n\t\tthis.renderLoop();\r\n\t}\r\n\tclose() {\r\n\t\tthis.isOpened = false;\r\n\t\tthis.elm[0].classList.remove('is-opened');\r\n\t\t// setTimeout(function() {this.elm[1].classList.remove('hide-behind-menu')} , 1000);\r\n\t\tthis.timeStart = Date.now();\r\n\t\tthis.renderLoop();\r\n\t}\r\n\tupdatePath(time) {\r\n\t\tconst points = [];\r\n\t\tfor (var i = 0; i < this.numPoints; i++) {\r\n\t\t\tpoints[i] =\r\n\t\t\t\t(1 -\r\n\t\t\t\t\t_easings__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cubicInOut(\r\n\t\t\t\t\t\tMath.min(\r\n\t\t\t\t\t\t\tMath.max(time - this.delayPointsArray[i], 0) / this.duration,\r\n\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)) *\r\n\t\t\t\t100;\r\n\t\t}\r\n\r\n\t\tlet str = '';\r\n\t\tstr += this.isOpened ? `M 0 0 V ${points[0]}` : `M 0 ${points[0]}`;\r\n\t\tfor (var i = 0; i < this.numPoints - 1; i++) {\r\n\t\t\tconst p = ((i + 1) / (this.numPoints - 1)) * 100;\r\n\t\t\tconst cp = p - ((1 / (this.numPoints - 1)) * 100) / 2;\r\n\t\t\tstr += `C ${cp} ${points[i]} ${cp} ${points[i + 1]} ${p} ${\r\n\t\t\t\tpoints[i + 1]\r\n\t\t\t} `;\r\n\t\t}\r\n\t\tstr += this.isOpened ? `V 100 H 0` : `V 0 H 0`;\r\n\t\treturn str;\r\n\t}\r\n\trender() {\r\n\t\tif (this.isOpened) {\r\n\t\t\tfor (var i = 0; i < this.path.length; i++) {\r\n\t\t\t\tthis.path[i].setAttribute(\r\n\t\t\t\t\t'd',\r\n\t\t\t\t\tthis.updatePath(Date.now() - (this.timeStart + this.delayPerPath * i))\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (var i = 0; i < this.path.length; i++) {\r\n\t\t\t\tthis.path[i].setAttribute(\r\n\t\t\t\t\t'd',\r\n\t\t\t\t\tthis.updatePath(\r\n\t\t\t\t\t\tDate.now() -\r\n\t\t\t\t\t\t\t(this.timeStart + this.delayPerPath * (this.path.length - i - 1))\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trenderLoop() {\r\n\t\tthis.render();\r\n\t\tif (\r\n\t\t\tDate.now() - this.timeStart <\r\n\t\t\tthis.duration +\r\n\t\t\t\tthis.delayPerPath * (this.path.length - 1) +\r\n\t\t\t\tthis.delayPointsMax\r\n\t\t) {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tthis.renderLoop();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.isAnimating = false;\r\n\t\t}\r\n\t}\r\n\tdisableScrolling() {\r\n\t\tvar x = window.scrollX;\r\n\t\tvar y = window.scrollY;\r\n\t\twindow.onscroll = function () {\r\n\t\t\twindow.scrollTo(x, y);\r\n\t\t};\r\n\t}\r\n\r\n\tenableScrolling() {\r\n\t\twindow.onscroll = function () {};\r\n\t}\r\n}\r\n(function () {\r\n\tconst elmHamburger = document.querySelector('.hamburger');\r\n\tconst body = document.querySelector('body');\r\n\tconst gNavItems = document.querySelectorAll('.global-menu__item');\r\n\tconst elmOverlay = document.querySelector('.shape-overlays');\r\n\tconst main = document.querySelector('main');\r\n\tconst elements = [elmOverlay, main];\r\n\tconst overlay = new ShapeOverlays(elements);\r\n\r\n\telmHamburger.addEventListener('click', () => {\r\n\t\tif (overlay.isAnimating) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\toverlay.toggle();\r\n\t\tif (overlay.isOpened === true) {\r\n\t\t\telmHamburger.classList.add('is-opened-navi');\r\n\t\t\toverlay.disableScrolling();\r\n\r\n\t\t\telmHamburger.setAttribute('aria-label', 'Back to the page');\r\n\t\t\telmHamburger.setAttribute('title', 'Close');\r\n\t\t\tfor (var i = 0; i < gNavItems.length; i++) {\r\n\t\t\t\tgNavItems[i].classList.add('is-opened');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\telmHamburger.classList.remove('is-opened-navi');\r\n\t\t\toverlay.enableScrolling();\r\n\t\t\telmHamburger.setAttribute('aria-label', 'Open the hamburger menu');\r\n\t\t\telmHamburger.setAttribute('title', 'menu');\r\n\t\t\tfor (var i = 0; i < gNavItems.length; i++) {\r\n\t\t\t\tgNavItems[i].classList.remove('is-opened');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n})();\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ShapeOverlays);\r\n\n\n//# sourceURL=webpack:///../src/js/hamburger/colordrip.js?");

/***/ }),

/***/ "../src/js/hamburger/easings.js":
/*!**************************************!*\
  !*** ../src/js/hamburger/easings.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n//\r\n// these easing functions are based on the code of glsl-easing module.\r\n// https://github.com/glslify/glsl-easings\r\n//\r\n\r\nconst ease = {\r\n\texponentialIn: (t) => {\r\n\t\treturn t == 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\r\n\t},\r\n\texponentialOut: (t) => {\r\n\t\treturn t == 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\r\n\t},\r\n\texponentialInOut: (t) => {\r\n\t\treturn t == 0.0 || t == 1.0\r\n\t\t\t? t\r\n\t\t\t: t < 0.5\r\n\t\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\r\n\t\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\r\n\t},\r\n\tsineOut: (t) => {\r\n\t\tconst HALF_PI = 1.5707963267948966;\r\n\t\treturn Math.sin(t * HALF_PI);\r\n\t},\r\n\tcircularInOut: (t) => {\r\n\t\treturn t < 0.5\r\n\t\t\t? 0.5 * (1.0 - Math.sqrt(1.0 - 4.0 * t * t))\r\n\t\t\t: 0.5 * (Math.sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\r\n\t},\r\n\tcubicIn: (t) => {\r\n\t\treturn t * t * t;\r\n\t},\r\n\tcubicOut: (t) => {\r\n\t\tconst f = t - 1.0;\r\n\t\treturn f * f * f + 1.0;\r\n\t},\r\n\tcubicInOut: (t) => {\r\n\t\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\r\n\t},\r\n\tquadraticOut: (t) => {\r\n\t\treturn -t * (t - 2.0);\r\n\t},\r\n\tquarticOut: (t) => {\r\n\t\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\r\n\t},\r\n};\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ease);\r\n\n\n//# sourceURL=webpack:///../src/js/hamburger/easings.js?");

/***/ })

}]);